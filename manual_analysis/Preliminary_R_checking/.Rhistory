i <- i-1
if ( i < 3 ) {
t <- t+1
i <- length(dfx.cdf)
}
}
tau <- tau_seq[t]
if ( (dfx.cdf[i] >= tau) & (dfx.cdf[i-1] < tau) & (dfx.cdf[i-2] < tau) ) {
d_req <- FALSE
} else {
i <- i-1
if ( i < 3 ) {
t <- t+1
i <- length(dfx.cdf)
}
}
tau <- tau_seq[t]
if ( (dfx.cdf[i] >= tau) & (dfx.cdf[i-1] < tau) & (dfx.cdf[i-2] < tau) ) {
d_req <- FALSE
} else {
i <- i-1
if ( i < 3 ) {
t <- t+1
i <- length(dfx.cdf)
}
}
tau <- tau_seq[t]
if ( (dfx.cdf[i] >= tau) & (dfx.cdf[i-1] < tau) & (dfx.cdf[i-2] < tau) ) {
d_req <- FALSE
} else {
i <- i-1
if ( i < 3 ) {
t <- t+1
i <- length(dfx.cdf)
}
}
t
tau
tau_seq
tau <- tau_seq[t]
if ( (dfx.cdf[i] >= tau) & (dfx.cdf[i-1] < tau) & (dfx.cdf[i-2] < tau) ) {
d_req <- FALSE
} else {
i <- i-1
if ( i < 3 ) {
t <- t+1
i <- length(dfx.cdf)
}
}
tau
tau <- tau_seq[t]
if ( (dfx.cdf[i] >= tau) & (dfx.cdf[i-1] < tau) & (dfx.cdf[i-2] < tau) ) {
d_req <- FALSE
} else {
i <- i-1
if ( i < 3 ) {
t <- t+1
i <- length(dfx.cdf)
}
}
d_req
tau_seq <- seq(0,range(dfx.cdf)[2], length.out=20)
d_req <- TRUE
i <- length(dfx.cdf)
t <- 1
while ( d_req & (i>2) ) {
tau <- tau_seq[t]
if ( (dfx.cdf[i] >= tau) & (dfx.cdf[i-1] < tau) & (dfx.cdf[i-2] < tau) ) {
d_req <- FALSE
} else {
i <- i-1
if ( i < 3 ) {
t <- t+1
i <- length(dfx.cdf)
}
}
}
i
tau
bins[i]
boundariesPWD <- "/Users/melissachen/Documents/Masters/Project_QTAG_writing/SALBIN/16sBaltic/boundaries.txt"
boundaries <- read.delim(paste0(boundariesPWD), header = FALSE, strip.white = TRUE)
?cdf
??cdf
ecdf(boundaries)
boundaries
as.numeric(boundaries)
ecdf(as.numeric(boundaries$V1))
plot(ecdf(as.numeric(boundaries$V1)))
plot(ecdf(as.numeric(boundaries$V1)), main="CDF of all boundaries")
sample(1:280)
sample(2:280)
set.seed(0948234)
sample(2:280)
set.seed(203498)
sample(2:280)
sort(sample(2:280)[1:100])
279/3
set.seed(203498)
sort(sample(2:280)[1:93])
sort(sample(2:280)[1:100])
1924/3
set.seed(594380)
sort(sample(2:1924)[1:650])
set.seed(594380)
sort(sample(2:1924)[1:100])
set.seed(594380)
sort(sample(2:1924)[1:650])
??betadisp
citation("vegan")
?adonis2
??adonis2
set.seed(223409)
sort(sample(2:3939)[1:100])
set.seed(223409)
sort(sample(2:3939)[1:1000])
set.seed(223409)
sort(sample(2:3939)[1:500])
set.seed(594380)
sort(sample(2:1924)[1:500])
set.seed(594380)
sort(sample(2:1924)[1:500])
set.seed(594380)
sort(sample(2:1924)[1:500])
set.seed(223409)
sort(sample(2:3939)[1:500])
set.seed(594380)
sort(sample(2:1924)[1:500])
setwd("~/Documents/Masters/Project_Environmental/Project_Salinity/Preliminary_R_checking/")
#!/bin/bash
library(MASS) # for NMDS plotting (isoMDS)
library(vegan) # for adonis
library(chron) # for date
##### This script takes otutables an stuff from salinity project and plots them to see if there are differences in extr/seq methods #######
#### Set FP #####
# setwd("~/Documents/Masters/Project_Environmental/Project_Salinity/Preliminary_R_checking/")
dm16sFP_min_BC <- "beta_div_fr16_min/bray_curtis_fraser16_otutable_min1000.txt"
dm16sFP_min_UWU <- "beta_div_fr16_min/unweighted_unifrac_fraser16_otutable_min1000.txt"
dm16sFP_min_WU <- "beta_div_fr16_min/weighted_unifrac_fraser16_otutable_min1000.txt"
dm16sFP_rare_BC <- "beta_div_fr16_rare/bray_curtis_fraser16_otutable_rare1000.txt"
dm16sFP_rare_UWU <- "beta_div_fr16_rare/unweighted_unifrac_fraser16_otutable_rare1000.txt"
dm16sFP_rare_WU <- "beta_div_fr16_rare/weighted_unifrac_fraser16_otutable_rare1000.txt"
dm16sFP_rare_BC_col <- "beta_div_COLLAPSED_16S/bray_curtis_fraser16_OTUTable_rare1000_col.txt"
dm16sFP_rare_UWU_col <- "beta_div_COLLAPSED_16S/unweighted_unifrac_fraser16_OTUTable_rare1000_col.txt"
dm16sFP_rare_WU_col <- "beta_div_COLLAPSED_16S/weighted_unifrac_fraser16_OTUTable_rare1000_col.txt"
dm18sFP_min_BC <- "beta_div_fr18_min/bray_curtis_fraser18_otutable_min1000.txt"
dm18sFP_min_UWU <- "beta_div_fr18_min/unweighted_unifrac_fraser18_otutable_min1000.txt"
dm18sFP_min_WU <- "beta_div_fr18_min/weighted_unifrac_fraser18_otutable_min1000.txt"
dm18sFP_rare_BC <- "beta_div_fr18_rare/bray_curtis_fraser18_otutable_rare1000.txt"
dm18sFP_rare_UWU <- "beta_div_fr18_rare/unweighted_unifrac_fraser18_otutable_rare1000.txt"
dm18sFP_rare_WU <- "beta_div_fr18_rare/weighted_unifrac_fraser18_otutable_rare1000.txt"
dm18sFP_rare_BC_col <- "beta_div_COLLAPSED_18S/bray_curtis_fraser18_OTUTable_rare1000_col.txt"
dm18sFP_rare_UWU_col <- "beta_div_COLLAPSED_18S/unweighted_unifrac_fraser18_OTUTable_rare1000_col.txt"
dm18sFP_rare_WU_col <- "beta_div_COLLAPSED_18S/weighted_unifrac_fraser18_OTUTable_rare1000_col.txt"
mf16FP <- "../raw_otu_and_mf/Fraser_16S/MANUAL_INPUT_FILES/Fraser16s_mappingfile_merged.txt"
mf18FP <- "../raw_otu_and_mf/Fraser_18S/MANUAL_INPUT_FILES/MF_Fraser18s_control_readded.txt"
mf16FP_col <- "../raw_otu_and_mf/Fraser_16S/OUTPUT_FILES/MF_16sFraser_noConCOL.txt"
mf18FP_col <- "../raw_otu_and_mf/Fraser_18S/OUTPUT_FILES/MF_18sFraser_noConCOL.txt"
for ( metric in c("BC","UWU","WU")) {
dm16 <- read.delim(get(paste0("dm16sFP_rare_",metric,"_col")), header=TRUE, stringsAsFactors = FALSE, row.names=1)
dm18 <- read.delim(get(paste0("dm18sFP_rare_",metric,"_col")), header=TRUE, stringsAsFactors = FALSE, row.names=1)
mf16 <- read.delim(mf16FP_col, header=TRUE, stringsAsFactors = FALSE, row.names=1)
mf18 <- read.delim(mf18FP_col, header=TRUE, stringsAsFactors = FALSE, row.names=1)
mf16 <- mf16[match(rownames(dm16), rownames(mf16)),]
mf18 <- mf18[match(rownames(dm18), rownames(mf18)),]
mf16$juliandate <- julian(x=mf16$Month,d=mf16$Day,y=0, origin. = c(1,0,0))
mf18$juliandate <- julian(x=mf18$Month,d=mf18$Day,y=0, origin. = c(1,0,0))
set.seed(1234012934)
nmds16 <- isoMDS(dist(dm16), k=2)
nmds18 <- isoMDS(dist(dm18), k=2)
# Plot via colors
salGrad <- colorRampPalette(colors = c("white","blue","darkblue"))
colorSal <- salGrad(34)
salRound <- round(as.numeric(mf16$SalinityEnviron))
salRound18s <- round(as.numeric(mf18$SalinityEnviron))
dateGrad <- colorRampPalette(colors = c("white","green","darkgreen"))
colordate <- dateGrad(228-115)
dateRound <- round(as.numeric(mf16$juliandate))
dateRound18s <- round(as.numeric(mf18$juliandate))
# range(round(as.numeric(mf16$juliandate)))
#### NMDS 16s #####
pdf(paste0("Fr16s_NMDS_COL_",metric,".pdf"),width = 8,height=4)
par(mfrow=c(1,2), mar=c(4.1,4.1,2.1,2.1))
plot(nmds16$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=colorSal[factor(salRound)]
)
legend("bottomleft",legend=c("Salinity=0","Salinity=33"),pch=21, pt.bg=c("white","darkblue"), cex=0.7)
plot(nmds16$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=colordate[factor(dateRound)]
)
legend("bottomleft",legend=c("Date=Apr25","Date=Aug16"),pch=21, pt.bg=c("white","darkgreen"), cex=0.7)
dev.off()
#### NMDS 18s ####
pdf(paste0("Fr18s_NMDS_COL_",metric,".pdf"),width=8,height=4)
par(mfrow=c(1,2), mar=c(4.1,4.1,2.1,2.1))
plot(nmds18$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=colorSal[factor(salRound18s)]
)
legend("bottomleft",legend=c("Salinity=0","Salinity=33"),pch=21, pt.bg=c("white","darkblue"), cex=0.7)
plot(nmds18$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=colordate[factor(dateRound18s)]
)
legend("bottomleft",legend=c("Date=Apr25","Date=Aug16"),pch=21, pt.bg=c("white","darkgreen"), cex=0.7)
dev.off()
capture.output(
adonis(dm16 ~ SalinityEnviron+juliandate, data=mf16, by="margin")
, file=paste0("adonis_fr16_SalDate_",metric,".txt"))
capture.output(
adonis(dm18 ~ SalinityEnviron +juliandate, data=mf18, by="margin")
, file=paste0("adonis_fr18_SalDate_",metric,".txt"))
}
#!/bin/bash
library(MASS) # for NMDS plotting (isoMDS)
library(vegan) # for adonis
library(chron) # for date
##### This script takes otutables an stuff from salinity project and plots them to see if there are differences in extr/seq methods #######
#### Set FP #####
# setwd("~/Documents/Masters/Project_Environmental/Project_Salinity/Preliminary_R_checking/")
dm16sFP_min_BC <- "beta_div_fr16_min/bray_curtis_fraser16_otutable_min1000.txt"
dm16sFP_min_UWU <- "beta_div_fr16_min/unweighted_unifrac_fraser16_otutable_min1000.txt"
dm16sFP_min_WU <- "beta_div_fr16_min/weighted_unifrac_fraser16_otutable_min1000.txt"
dm16sFP_rare_BC <- "beta_div_fr16_rare/bray_curtis_fraser16_otutable_rare1000.txt"
dm16sFP_rare_UWU <- "beta_div_fr16_rare/unweighted_unifrac_fraser16_otutable_rare1000.txt"
dm16sFP_rare_WU <- "beta_div_fr16_rare/weighted_unifrac_fraser16_otutable_rare1000.txt"
dm16sFP_rare_BC_col <- "beta_div_COLLAPSED_16S/bray_curtis_fraser16_OTUTable_rare1000_col.txt"
dm16sFP_rare_UWU_col <- "beta_div_COLLAPSED_16S/unweighted_unifrac_fraser16_OTUTable_rare1000_col.txt"
dm16sFP_rare_WU_col <- "beta_div_COLLAPSED_16S/weighted_unifrac_fraser16_OTUTable_rare1000_col.txt"
dm18sFP_min_BC <- "beta_div_fr18_min/bray_curtis_fraser18_otutable_min1000.txt"
dm18sFP_min_UWU <- "beta_div_fr18_min/unweighted_unifrac_fraser18_otutable_min1000.txt"
dm18sFP_min_WU <- "beta_div_fr18_min/weighted_unifrac_fraser18_otutable_min1000.txt"
dm18sFP_rare_BC <- "beta_div_fr18_rare/bray_curtis_fraser18_otutable_rare1000.txt"
dm18sFP_rare_UWU <- "beta_div_fr18_rare/unweighted_unifrac_fraser18_otutable_rare1000.txt"
dm18sFP_rare_WU <- "beta_div_fr18_rare/weighted_unifrac_fraser18_otutable_rare1000.txt"
dm18sFP_rare_BC_col <- "beta_div_COLLAPSED_18S/bray_curtis_fraser18_OTUTable_rare1000_col.txt"
dm18sFP_rare_UWU_col <- "beta_div_COLLAPSED_18S/unweighted_unifrac_fraser18_OTUTable_rare1000_col.txt"
dm18sFP_rare_WU_col <- "beta_div_COLLAPSED_18S/weighted_unifrac_fraser18_OTUTable_rare1000_col.txt"
mf16FP <- "../raw_otu_and_mf/Fraser_16S/MANUAL_INPUT_FILES/Fraser16s_mappingfile_merged.txt"
mf18FP <- "../raw_otu_and_mf/Fraser_18S/MANUAL_INPUT_FILES/MF_Fraser18s_control_readded.txt"
mf16FP_col <- "../raw_otu_and_mf/Fraser_16S/OUTPUT_FILES/MF_16sFraser_noConCOL.txt"
mf18FP_col <- "../raw_otu_and_mf/Fraser_18S/OUTPUT_FILES/MF_18sFraser_noConCOL.txt"
#############
# setwd("/Users/melissachen/Documents/Masters/Project_QTAG_writing/Preliminary_R_checking") # For troubleshootin
for ( type in c("min","rare")) {
for ( metric in c("BC","UWU","WU")) {
dm16 <- read.delim(get(paste0("dm16sFP_",type,"_",metric)), header=TRUE, stringsAsFactors = FALSE, row.names=1)
dm18 <- read.delim(get(paste0("dm18sFP_",type,"_",metric)), header=TRUE, stringsAsFactors = FALSE, row.names=1)
mf16 <- read.delim(mf16FP, header=TRUE, stringsAsFactors = FALSE, row.names=1)
mf18 <- read.delim(mf18FP, header=TRUE, stringsAsFactors = FALSE, row.names=1)
mf16 <- mf16[match(rownames(dm16), rownames(mf16)),]
mf18 <- mf18[match(rownames(dm18), rownames(mf18)),]
set.seed(1234012934)
nmds16 <- isoMDS(dist(dm16), k=2)
nmds18 <- isoMDS(dist(dm18), k=2)
# Plot via colors
salGrad <- colorRampPalette(colors = c("white","blue","darkblue"))
colorSal <- salGrad(34)
salRound <- round(as.numeric(mf16$SalinityEnviron))
salRound18s <- round(as.numeric(mf18$SalinityEnviron))
#### NMDS 16s #####
pdf(paste0("Fr16s_NMDS_",type,"_",metric,".pdf"),7,7)
par(mfrow=c(2,2), mar=c(4.1,4.1,2.1,2.1))
plot(nmds16$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=colorSal[factor(salRound)]
)
legend("bottomright",legend=c("Salinity=0","Salinity=33"),pch=21, pt.bg=c("white","darkblue"), cex=0.7)
plot(nmds16$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=c("purple","green")[factor(mf16$Extrmethod)]
)
legend("bottomright",legend=c("Single Tube","Plate"),pch=21, pt.bg=c("green","purple"), cex=0.7)
plot(nmds16$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=c("red","blue","orange")[factor(mf16$Year)]
)
legend("bottomright",legend=c("Fr2014-MC_FN","Fr2015-FN","Fr2016-MC"),pch=21, pt.bg=c("red","blue","orange"), cex=0.7)
plot(nmds16$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=c("grey","yellow")[factor(mf16$Polymerase)]
)
legend("bottomright",legend=c("Phusion","5Prime"),pch=21, pt.bg=c("grey","yellow"), cex=0.7)
dev.off()
#### NMDS 18s ####
pdf(paste0("Fr18s_NMDS_",type,"_",metric,".pdf"),7,7)
par(mfrow=c(2,2), mar=c(4.1,4.1,2.1,2.1))
plot(nmds18$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=colorSal[factor(salRound18s)]
)
legend("bottomright",legend=c("Salinity=0","Salinity=33"),pch=21, pt.bg=c("white","darkblue"), cex=0.7)
plot(nmds18$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=c("purple","green")[factor(mf18$Extrmethod)]
)
legend("bottomright",legend=c("Single Tube","Plate"),pch=21, pt.bg=c("green","purple"), cex=0.7)
plot(nmds18$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=c("red","blue","orange")[factor(mf18$Year)]
)
legend("bottomright",legend=c("Fr2014-MC_FN","Fr2015-FN","Fr2016-MC"),pch=21, pt.bg=c("red","blue","orange"), cex=0.7)
dev.off()
mf16$juliandate <- julian(x=mf16$Month,d=mf16$Day,y=0, origin. = c(1,0,0))
# capture.output(
#     adonis(dist(dm16) ~ SalinityEnviron*juliandate, data=mf16)
#     , file=paste0("adonis_fr16_",type,"_",metric,".txt"))
capture.output(
adonis2(dist(dm16) ~ Year + Polymerase + Extrmethod, data=mf16)
, file=paste0("adonis_fr16_processingbatch_",type,"_",metric,".txt"))
mf18$juliandate <- julian(x=mf18$Month,d=mf18$Day,y=0, origin. = c(1,0,0))
# capture.output(
#     adonis(dist(dm18) ~ SalinityEnviron*juliandate, data=mf18)
#     , file=paste0("adonis_fr18_",type,"_",metric,".txt"))
capture.output(
adonis2(dist(dm18) ~ Year + Extrmethod, data=mf18)
, file=paste0("adonis_fr18_processingbatch_",type,"_",metric,".txt"))
}
}
for ( metric in c("BC","UWU","WU")) {
dm16 <- read.delim(get(paste0("dm16sFP_rare_",metric,"_col")), header=TRUE, stringsAsFactors = FALSE, row.names=1)
dm18 <- read.delim(get(paste0("dm18sFP_rare_",metric,"_col")), header=TRUE, stringsAsFactors = FALSE, row.names=1)
mf16 <- read.delim(mf16FP_col, header=TRUE, stringsAsFactors = FALSE, row.names=1)
mf18 <- read.delim(mf18FP_col, header=TRUE, stringsAsFactors = FALSE, row.names=1)
mf16 <- mf16[match(rownames(dm16), rownames(mf16)),]
mf18 <- mf18[match(rownames(dm18), rownames(mf18)),]
mf16$juliandate <- julian(x=mf16$Month,d=mf16$Day,y=0, origin. = c(1,0,0))
mf18$juliandate <- julian(x=mf18$Month,d=mf18$Day,y=0, origin. = c(1,0,0))
set.seed(1234012934)
nmds16 <- isoMDS(dist(dm16), k=2)
nmds18 <- isoMDS(dist(dm18), k=2)
# Plot via colors
salGrad <- colorRampPalette(colors = c("white","blue","darkblue"))
colorSal <- salGrad(34)
salRound <- round(as.numeric(mf16$SalinityEnviron))
salRound18s <- round(as.numeric(mf18$SalinityEnviron))
dateGrad <- colorRampPalette(colors = c("white","green","darkgreen"))
colordate <- dateGrad(228-115)
dateRound <- round(as.numeric(mf16$juliandate))
dateRound18s <- round(as.numeric(mf18$juliandate))
# range(round(as.numeric(mf16$juliandate)))
#### NMDS 16s #####
pdf(paste0("Fr16s_NMDS_COL_",metric,".pdf"),width = 8,height=4)
par(mfrow=c(1,2), mar=c(4.1,4.1,2.1,2.1))
plot(nmds16$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=colorSal[factor(salRound)]
)
legend("bottomleft",legend=c("Salinity=0","Salinity=33"),pch=21, pt.bg=c("white","darkblue"), cex=0.7)
plot(nmds16$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=colordate[factor(dateRound)]
)
legend("bottomleft",legend=c("Date=Apr25","Date=Aug16"),pch=21, pt.bg=c("white","darkgreen"), cex=0.7)
dev.off()
#### NMDS 18s ####
pdf(paste0("Fr18s_NMDS_COL_",metric,".pdf"),width=8,height=4)
par(mfrow=c(1,2), mar=c(4.1,4.1,2.1,2.1))
plot(nmds18$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=colorSal[factor(salRound18s)]
)
legend("bottomleft",legend=c("Salinity=0","Salinity=33"),pch=21, pt.bg=c("white","darkblue"), cex=0.7)
plot(nmds18$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=colordate[factor(dateRound18s)]
)
legend("bottomleft",legend=c("Date=Apr25","Date=Aug16"),pch=21, pt.bg=c("white","darkgreen"), cex=0.7)
dev.off()
capture.output(
adonis(dm16 ~ SalinityEnviron+juliandate, data=mf16, by="margin")
, file=paste0("adonis_fr16_SalDate_",metric,".txt"))
capture.output(
adonis(dm18 ~ SalinityEnviron +juliandate, data=mf18, by="margin")
, file=paste0("adonis_fr18_SalDate_",metric,".txt"))
}
setwd("~/Documents/Masters/Project_Environmental/Project_Salinity/Preliminary_R_checking/")
setwd("/Users/melissachen/Documents/Masters/Project_QTAG_writing/Preliminary_R_checking") # For troubleshootin
for ( type in c("min","rare")) {
for ( metric in c("BC","UWU","WU")) {
dm16 <- read.delim(get(paste0("dm16sFP_",type,"_",metric)), header=TRUE, stringsAsFactors = FALSE, row.names=1)
dm18 <- read.delim(get(paste0("dm18sFP_",type,"_",metric)), header=TRUE, stringsAsFactors = FALSE, row.names=1)
mf16 <- read.delim(mf16FP, header=TRUE, stringsAsFactors = FALSE, row.names=1)
mf18 <- read.delim(mf18FP, header=TRUE, stringsAsFactors = FALSE, row.names=1)
mf16 <- mf16[match(rownames(dm16), rownames(mf16)),]
mf18 <- mf18[match(rownames(dm18), rownames(mf18)),]
set.seed(1234012934)
nmds16 <- isoMDS(dist(dm16), k=2)
nmds18 <- isoMDS(dist(dm18), k=2)
# Plot via colors
salGrad <- colorRampPalette(colors = c("white","blue","darkblue"))
colorSal <- salGrad(34)
salRound <- round(as.numeric(mf16$SalinityEnviron))
salRound18s <- round(as.numeric(mf18$SalinityEnviron))
#### NMDS 16s #####
pdf(paste0("Fr16s_NMDS_",type,"_",metric,".pdf"),7,7)
par(mfrow=c(2,2), mar=c(4.1,4.1,2.1,2.1))
plot(nmds16$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=colorSal[factor(salRound)]
)
legend("bottomright",legend=c("Salinity=0","Salinity=33"),pch=21, pt.bg=c("white","darkblue"), cex=0.7)
plot(nmds16$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=c("purple","green")[factor(mf16$Extrmethod)]
)
legend("bottomright",legend=c("Single Tube","Plate"),pch=21, pt.bg=c("green","purple"), cex=0.7)
plot(nmds16$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=c("red","blue","orange")[factor(mf16$Year)]
)
legend("bottomright",legend=c("Fr2014-MC_FN","Fr2015-FN","Fr2016-MC"),pch=21, pt.bg=c("red","blue","orange"), cex=0.7)
plot(nmds16$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=c("grey","yellow")[factor(mf16$Polymerase)]
)
legend("bottomright",legend=c("Phusion","5Prime"),pch=21, pt.bg=c("grey","yellow"), cex=0.7)
dev.off()
#### NMDS 18s ####
pdf(paste0("Fr18s_NMDS_",type,"_",metric,".pdf"),7,7)
par(mfrow=c(2,2), mar=c(4.1,4.1,2.1,2.1))
plot(nmds18$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=colorSal[factor(salRound18s)]
)
legend("bottomright",legend=c("Salinity=0","Salinity=33"),pch=21, pt.bg=c("white","darkblue"), cex=0.7)
plot(nmds18$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=c("purple","green")[factor(mf18$Extrmethod)]
)
legend("bottomright",legend=c("Single Tube","Plate"),pch=21, pt.bg=c("green","purple"), cex=0.7)
plot(nmds18$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=c("red","blue","orange")[factor(mf18$Year)]
)
legend("bottomright",legend=c("Fr2014-MC_FN","Fr2015-FN","Fr2016-MC"),pch=21, pt.bg=c("red","blue","orange"), cex=0.7)
dev.off()
mf16$juliandate <- julian(x=mf16$Month,d=mf16$Day,y=0, origin. = c(1,0,0))
# capture.output(
#     adonis(dist(dm16) ~ SalinityEnviron*juliandate, data=mf16)
#     , file=paste0("adonis_fr16_",type,"_",metric,".txt"))
capture.output(
adonis2(dist(dm16) ~ Year + Polymerase + Extrmethod, data=mf16)
, file=paste0("adonis_fr16_processingbatch_",type,"_",metric,".txt"))
mf18$juliandate <- julian(x=mf18$Month,d=mf18$Day,y=0, origin. = c(1,0,0))
# capture.output(
#     adonis(dist(dm18) ~ SalinityEnviron*juliandate, data=mf18)
#     , file=paste0("adonis_fr18_",type,"_",metric,".txt"))
capture.output(
adonis2(dist(dm18) ~ Year + Extrmethod, data=mf18)
, file=paste0("adonis_fr18_processingbatch_",type,"_",metric,".txt"))
}
}
for ( metric in c("BC","UWU","WU")) {
dm16 <- read.delim(get(paste0("dm16sFP_rare_",metric,"_col")), header=TRUE, stringsAsFactors = FALSE, row.names=1)
dm18 <- read.delim(get(paste0("dm18sFP_rare_",metric,"_col")), header=TRUE, stringsAsFactors = FALSE, row.names=1)
mf16 <- read.delim(mf16FP_col, header=TRUE, stringsAsFactors = FALSE, row.names=1)
mf18 <- read.delim(mf18FP_col, header=TRUE, stringsAsFactors = FALSE, row.names=1)
mf16 <- mf16[match(rownames(dm16), rownames(mf16)),]
mf18 <- mf18[match(rownames(dm18), rownames(mf18)),]
mf16$juliandate <- julian(x=mf16$Month,d=mf16$Day,y=0, origin. = c(1,0,0))
mf18$juliandate <- julian(x=mf18$Month,d=mf18$Day,y=0, origin. = c(1,0,0))
set.seed(1234012934)
nmds16 <- isoMDS(dist(dm16), k=2)
nmds18 <- isoMDS(dist(dm18), k=2)
# Plot via colors
salGrad <- colorRampPalette(colors = c("white","blue","darkblue"))
colorSal <- salGrad(34)
salRound <- round(as.numeric(mf16$SalinityEnviron))
salRound18s <- round(as.numeric(mf18$SalinityEnviron))
dateGrad <- colorRampPalette(colors = c("white","green","darkgreen"))
colordate <- dateGrad(228-115)
dateRound <- round(as.numeric(mf16$juliandate))
dateRound18s <- round(as.numeric(mf18$juliandate))
# range(round(as.numeric(mf16$juliandate)))
#### NMDS 16s #####
pdf(paste0("Fr16s_NMDS_COL_",metric,".pdf"),width = 8,height=4)
par(mfrow=c(1,2), mar=c(4.1,4.1,2.1,2.1))
plot(nmds16$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=colorSal[factor(salRound)]
)
legend("bottomleft",legend=c("Salinity=0","Salinity=33"),pch=21, pt.bg=c("white","darkblue"), cex=0.7)
plot(nmds16$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=colordate[factor(dateRound)]
)
legend("bottomleft",legend=c("Date=Apr25","Date=Aug16"),pch=21, pt.bg=c("white","darkgreen"), cex=0.7)
dev.off()
#### NMDS 18s ####
pdf(paste0("Fr18s_NMDS_COL_",metric,".pdf"),width=8,height=4)
par(mfrow=c(1,2), mar=c(4.1,4.1,2.1,2.1))
plot(nmds18$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=colorSal[factor(salRound18s)]
)
legend("bottomleft",legend=c("Salinity=0","Salinity=33"),pch=21, pt.bg=c("white","darkblue"), cex=0.7)
plot(nmds18$points, xlab="NMDS1", ylab="NMDS2"
, pch=21
, bg=colordate[factor(dateRound18s)]
)
legend("bottomleft",legend=c("Date=Apr25","Date=Aug16"),pch=21, pt.bg=c("white","darkgreen"), cex=0.7)
dev.off()
capture.output(
adonis(dm16 ~ SalinityEnviron+juliandate, data=mf16, by="margin")
, file=paste0("adonis_fr16_SalDate_",metric,".txt"))
capture.output(
adonis(dm18 ~ SalinityEnviron +juliandate, data=mf18, by="margin")
, file=paste0("adonis_fr18_SalDate_",metric,".txt"))
}
